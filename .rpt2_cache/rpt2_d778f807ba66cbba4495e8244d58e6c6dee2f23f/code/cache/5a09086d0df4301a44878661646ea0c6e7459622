{"code":"import { projectInstall } from 'pkg-install';\r\nimport { copyTemplateFiles } from './copy-template-files';\r\nimport { initGit } from './init-git';\r\nexport var getListrTasks = function (options, directoryOptions) { return ([\r\n    {\r\n        title: 'Copy project files',\r\n        task: function () { return copyTemplateFiles(directoryOptions); },\r\n    },\r\n    {\r\n        title: 'Initialize git',\r\n        task: function () { return initGit(directoryOptions); },\r\n        enabled: function () { return options.git; },\r\n    },\r\n    {\r\n        title: 'Install dependencies',\r\n        task: function () { return projectInstall({ cwd: directoryOptions.targetDirectory }); },\r\n        skip: function () { return !options.runInstall ? 'Pass --install to automatically install dependencies' : undefined; },\r\n    },\r\n]); };\r\n","references":["/Users/bobby/Documents/private/create-node-library/node_modules/pkg-install/lib/index.d.ts","/Users/bobby/Documents/private/create-node-library/src/project/copy-template-files.ts","/Users/bobby/Documents/private/create-node-library/src/project/init-git.ts"],"dts":{"name":"/Users/bobby/Documents/private/create-node-library/.tmp/project/get-listr-tasks.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"execa\" />\r\nexport declare const getListrTasks: (options: any, directoryOptions: any) => ({\r\n    title: string;\r\n    task: () => Promise<any>;\r\n    enabled?: undefined;\r\n    skip?: undefined;\r\n} | {\r\n    title: string;\r\n    task: () => Promise<never>;\r\n    enabled: () => any;\r\n    skip?: undefined;\r\n} | {\r\n    title: string;\r\n    task: () => Promise<import(\"execa\").ExecaReturns>;\r\n    skip: () => string;\r\n    enabled?: undefined;\r\n})[];\r\n"}}
