{"code":"var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport execa from 'execa';\r\nexport var initGit = function (options) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n    var response;\r\n    return tslib_1.__generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, execa('git', ['init'], { cwd: options.targetDirectory })];\r\n            case 1:\r\n                response = _a.sent();\r\n                if (response.failed) {\r\n                    return [2 /*return*/, Promise.reject(new Error('Failed to initialize Git'))];\r\n                }\r\n                return [2 /*return*/];\r\n        }\r\n    });\r\n}); };\r\n","references":["/Users/bobby/Documents/private/create-node-library/node_modules/@types/execa/index.d.ts"],"dts":{"name":"/Users/bobby/Documents/private/create-node-library/.tmp/project/init-git.d.ts","writeByteOrderMark":false,"text":"export declare const initGit: (options: any) => Promise<never>;\r\n"}}
