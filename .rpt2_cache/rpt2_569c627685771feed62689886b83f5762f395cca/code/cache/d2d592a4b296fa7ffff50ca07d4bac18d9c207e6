{"code":"import arg from 'arg';\r\nimport inquirer from 'inquirer';\r\nimport { createProject } from './main';\r\nconst parseArgumentsToOptions = (rawArguments) => {\r\n    const args = arg({\r\n        '--yes': Boolean,\r\n        '--git': Boolean,\r\n        '--install': Boolean,\r\n        '-y': '--yes',\r\n        '-g': '--git',\r\n        '-i': '--install',\r\n    }, {\r\n        argv: rawArguments.slice(2),\r\n    });\r\n    return {\r\n        skipPrompts: args['--yes'] || false,\r\n        git: args['--git'] || false,\r\n        runInstall: args['--install'] || false,\r\n        projectName: args._[0],\r\n        template: args._[1],\r\n    };\r\n};\r\nconst promptForMissingOptions = async (options) => {\r\n    const defaultProjectName = 'node-library';\r\n    const defaultTemplate = 'TypeScript';\r\n    if (options.skipPrompts) {\r\n        return {\r\n            ...options,\r\n            projectName: options.projectName || defaultProjectName,\r\n            template: options.template || defaultTemplate,\r\n        };\r\n    }\r\n    const questions = [];\r\n    if (!options.projectName) {\r\n        questions.push({\r\n            type: 'input',\r\n            name: 'projectName',\r\n            message: 'Please name your new project',\r\n            default: defaultProjectName,\r\n        });\r\n    }\r\n    if (!options.template) {\r\n        questions.push({\r\n            type: 'list',\r\n            name: 'template',\r\n            message: 'Please choose which template you want to use',\r\n            choices: ['TypeScript'],\r\n            default: defaultTemplate,\r\n        });\r\n    }\r\n    const answers = await inquirer.prompt(questions);\r\n    return {\r\n        ...options,\r\n        projectName: options.projectName || answers.projectName,\r\n        template: options.template || defaultTemplate,\r\n    };\r\n};\r\nexport const cli = async (args) => {\r\n    const parsedOptions = parseArgumentsToOptions(args);\r\n    const options = await promptForMissingOptions(parsedOptions);\r\n    await createProject(options);\r\n};\r\n","references":["/Users/bobby/Documents/private/create-node-library/node_modules/arg/index.d.ts","/Users/bobby/Documents/private/create-node-library/node_modules/inquirer/lib/inquirer.js","/Users/bobby/Documents/private/create-node-library/src/main.ts"],"dts":{"name":"/Users/bobby/Documents/private/create-node-library/.tmp/cli.d.ts","writeByteOrderMark":false,"text":"export declare const cli: (args: any) => Promise<void>;\r\n"}}
