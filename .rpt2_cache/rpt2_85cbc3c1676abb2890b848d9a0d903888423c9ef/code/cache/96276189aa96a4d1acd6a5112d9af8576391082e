{"code":"import { isObject } from './is-object';\r\n/**\r\n * Deep merge two objects.\r\n * @param target\r\n * @param ...sources\r\n */\r\nexport const mergeDeep = (target, ...sources) => {\r\n    if (!sources.length) {\r\n        return target;\r\n    }\r\n    const source = sources.shift();\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                if (!target[key]) {\r\n                    Object.assign(target, { [key]: {} });\r\n                }\r\n                mergeDeep(target[key], source[key]);\r\n            }\r\n            else {\r\n                Object.assign(target, { [key]: source[key] });\r\n            }\r\n        }\r\n    }\r\n    return mergeDeep(target, ...sources);\r\n};\r\n","references":["/Users/bobby/Documents/private/create-node-library/src/helpers/is-object.ts"],"dts":{"name":"/Users/bobby/Documents/private/create-node-library/.tmp/helpers/merge-deep.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Deep merge two objects.\r\n * @param target\r\n * @param ...sources\r\n */\r\nexport declare const mergeDeep: (target: any, ...sources: any[]) => {};\r\n"}}
